#列表元素的删除操作
# remove()
'''
一次删除一个元素
重复元素只删除第一个
元素不存在抛出ValueError
'''

lst = [10,20,30,40,50,60]
lst.remove(10)
print(lst)
# [20, 30, 40, 50, 60]
lst.append(60)
print(lst)
# [20, 30, 40, 50, 60, 60]
lst.remove(60)
print(lst)
# [20, 30, 40, 50, 60] -->重复元素只删除第一个
# ------元素不存在抛出ValueError------
# lst.remove(100)
# print(lst)
# ValueError: list.remove(x): x not in list

# ---------------------------------------------


# pop()
'''
删除一个指定索引位置的元素
指定索引不存在抛出IndexError
不指定索引，删除最后一个元素
'''
print('未删除前:',lst)
# 未删除前: [20, 30, 40, 50, 60]

lst.pop(1)#删除索引为1【第二个元素】
print('删除索引为1【第二个元素】后:',lst)
# 删除索引为1【第二个元素】后: [20, 40, 50, 60]
# 如果不指定索引参数，将和remove()效果相同

lst.pop()
print('不指定索引:',lst)
# 不指定索引: [20, 40, 50]


# ------------------------------------------
# 切片 一次至少删除一个元素
print('切片前',lst)
newlst=lst[1:3]#新列表将以lst的索引1，2元素为自己列表的元素(也就是第2，3个元素)
print('切片删除后',newlst)
# 切片前 [20, 40, 50]
# 切片删除后 [40, 50]
lst[1:]=[]#从索引1，即第二个元素（包括第二个元素）开始，替换为空，即为删除
print('另一种切片删除方法删除后:',lst)
# 另一种切片删除方法删除后: [20]

# ---------------------------

# clear() 清空列表
lst.clear()
print('clear之后',lst)
# clear之后 []
# ------------------------------


# del 删除列表
del(lst)
print(lst)
# NameError: name 'lst' is not defined. Did you mean: 'list'?
# 列表不存在了，所以无法打印输出