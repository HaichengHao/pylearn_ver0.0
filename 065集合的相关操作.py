#集合的相关操作
'''
集合元素的判断操作
 - in 或 not in
集合元素的新增操作
  - 调用add()方法，一次添加一个元素
  -调用update()方法，至少添加一个元素
集合元素的删除操作
  -调用remove()方法，一次删除一个指定元素，如果指定的元素不存在抛出KeyError
  -调用discard()方法，一次删除一个指定元素，如果指定的元素不存在不抛出异常
  -调用pop()方法，一次只删除一个任意元素
  -调用clear()方法，清空集合
'''
# ---判断元素是否存在--
s = {1,2,3,4,6,7,8,9}
print(5 in s)
# False
print(2 in s)
# True
print(10 not in s)
# True
print(1 not in s)
# False


# ---集合元素的新增--
s.add(5)
print(s)
# {1, 2, 3, 4, 5, 6, 7, 8, 9}
s.update({10,11,12})
print(s)
# {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
s.update([13,14,15,16])
print(s)
# {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}
s.update((0,1,2,3,16,17,18))
print(s)
# {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18}


# ----删除操作----
s.remove(0)
print(s)
# {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18}
# s.remove(100) <---用remove()方法去移除集合里没有的元素会报错
'''
   s.remove(100)
KeyError: 100
'''

s.discard(100)
print(s)
# {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18}
'''
调用discard方法来删除集合中不存在的元素不会报错'''

s.discard(1)
print(s)
# {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18}


s.pop()
print(s)
# {3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18}

'''
s.pop(6)
print(s)

TypeError: set.pop() takes no arguments (1 given)
pop()智能任意删除，不支持指定删除'''

s.clear()
print(s)
# set() <--clear方法可以使集合置为空


# clear方法在列表中的使用
l = [1,3,45,5,5,64]
print(l)
# [1, 3, 45, 5, 5, 64]
l.clear()
print(l)
# []
